{"version":3,"file":"static/js/827.e330ba91.chunk.js","mappings":"gMACA,EAAyB,2BAAzB,EAA6D,2B,SCY7D,EAXmB,SAAH,GAAoB,IAAdA,EAAM,EAANA,OACZC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAEhB,OACE,gBAAIC,UAAWC,EAAY,WACzB,gBAAID,UAAWC,EAAY,qBAAUH,MACrC,uBAAIC,MAGV,ECWA,EAlBoB,SAAH,GAAwB,IAAlBG,EAAU,EAAVA,WACfC,EAAmBD,EAAWE,OAEpC,OACE,8BACID,GAGA,wBACGD,EAAWG,KAAI,SAAAR,GAAM,OACpB,SAAC,EAAU,CAAiBA,OAAQA,GAAnBA,EAAOS,GAAsB,OAJlD,qEAUR,E,2BCQA,EArBgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,MAAK,eAA3CP,EAAU,KAAEQ,EAAa,KAQhC,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GACbM,MAAK,SAAAC,GAAQ,OAAIJ,EAAcI,EAASC,QAAQ,IAChDC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GACtC,GAAG,CAACV,KAGF,8BACkB,OAAfL,GACC,uCAEA,SAAC,EAAW,CAACA,WAAYA,KAIjC,C,qLCxBMkB,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAiB,+BAWtC,8CAXM,oHAEoBC,EAAAA,EAAAA,IAAU,GAAD,OAC3BF,EAAQ,uCAA+BD,IAC1C,KAAD,EAFa,OAARN,EAAQ,gBAGYA,EAASU,KAAK,KAAD,EAAtB,OAAXC,EAAW,yBAEVA,GAAW,kCAElBP,QAAQC,IAAI,KAAML,SAASU,KAAKE,gBAAgB,2DAEnD,sBAEM,SAAeC,EAAiB,GAAD,+BAWrC,8CAXM,WAAgCC,GAAK,uGAEjBL,EAAAA,EAAAA,IAAU,GAAD,OAC3BF,EAAQ,iCAAyBD,EAAO,kBAAUQ,IACrD,KAAD,EAFa,OAARd,EAAQ,gBAGYA,EAASU,KAAK,KAAD,EAAtB,OAAXK,EAAW,yBAEVA,GAAW,kCAElBX,QAAQC,IAAI,KAAML,SAASU,KAAKE,gBAAgB,2DAEnD,sBAEM,SAAeI,EAAa,GAAD,+BAWjC,8CAXM,WAA4BxB,GAAE,uGAEViB,EAAAA,EAAAA,IAAU,GAAD,OAC3BF,EAAQ,kBAAUf,EAAE,oBAAYc,IACnC,KAAD,EAFa,OAARN,EAAQ,gBAGMA,EAASU,KAAK,KAAD,EAAtB,OAALO,EAAK,yBAEJA,GAAK,kCAEZb,QAAQC,IAAI,KAAML,SAASU,KAAKE,gBAAgB,2DAEnD,sBAEM,SAAeM,EAAe,GAAD,+BAWnC,8CAXM,WAA8B1B,GAAE,uGAEZiB,EAAAA,EAAAA,IAAU,GAAD,OAC3BF,EAAQ,kBAAUf,EAAE,4BAAoBc,IAC3C,KAAD,EAFa,OAARN,EAAQ,gBAGOA,EAASU,KAAK,KAAD,EAAtB,OAANS,EAAM,yBAELA,GAAM,kCAEbf,QAAQC,IAAI,KAAML,SAASU,KAAKE,gBAAgB,2DAEnD,sBAEM,SAAed,EAAgB,GAAD,+BAWpC,8CAXM,WAA+BN,GAAE,uGAEbiB,EAAAA,EAAAA,IAAU,GAAD,OAC3BF,EAAQ,kBAAUf,EAAE,4BAAoBc,IAC3C,KAAD,EAFa,OAARN,EAAQ,gBAGQA,EAASU,KAAK,KAAD,EAAtB,OAAPU,EAAO,yBAENA,GAAO,kCAEdhB,QAAQC,IAAI,KAAML,SAASU,KAAKE,gBAAgB,2DAEnD,sB","sources":["webpack://goit-react-hw-05-movies/./src/Components/ReviewsList/ReviewItem.module.scss?e434","Components/ReviewsList/ReviewItem.jsx","Components/ReviewsList/ReviewsList.jsx","Pages/Reviews/Reviews.jsx","Services/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"review\":\"ReviewItem_review__eu-hc\",\"author\":\"ReviewItem_author__FrkEO\"};","import scss from './ReviewItem.module.scss';\r\n\r\nconst ReviewItem = ({ review }) => {\r\n  const { author, content } = review;\r\n\r\n  return (\r\n    <li className={scss.review}>\r\n      <h4 className={scss.author}>Author: {author}</h4>\r\n      <p>{content}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ReviewItem;\r\n","//\r\n\r\nimport ReviewItem from './ReviewItem';\r\n\r\nconst ReviewsList = ({ reviewsArr }) => {\r\n  const reviewsArrLength = reviewsArr.length;\r\n\r\n  return (\r\n    <>\r\n      {!reviewsArrLength ? (\r\n        <p>We don't have any reviews for this movie</p>\r\n      ) : (\r\n        <ul>\r\n          {reviewsArr.map(review => (\r\n            <ReviewItem key={review.id} review={review} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReviewsList;\r\n","//\r\n\r\nimport ReviewsList from 'Components/ReviewsList/ReviewsList';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMovieReviews } from 'Services/movieApi';\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n  const [reviewsArr, setReviewsArr] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getMovieReviews(movieId)\r\n      .then(response => setReviewsArr(response.results))\r\n      .catch(error => console.log(error));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {reviewsArr === null ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <ReviewsList reviewsArr={reviewsArr} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '006535a90e42ebf59916948f18019782';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport async function getTrandingMovies() {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\r\n    );\r\n    const trandMovies = await response.data;\r\n\r\n    return trandMovies;\r\n  } catch (error) {\r\n    console.log(error.response.data.status_message);\r\n  }\r\n}\r\n\r\nexport async function getMoviesByQuery(query) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\r\n    );\r\n    const queryMovies = await response.data;\r\n\r\n    return queryMovies;\r\n  } catch (error) {\r\n    console.log(error.response.data.status_message);\r\n  }\r\n}\r\n\r\nexport async function getMovieById(id) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\r\n    );\r\n    const movie = await response.data;\r\n\r\n    return movie;\r\n  } catch (error) {\r\n    console.log(error.response.data.status_message);\r\n  }\r\n}\r\n\r\nexport async function getMovieActors(id) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\r\n    );\r\n    const actors = await response.data;\r\n\r\n    return actors;\r\n  } catch (error) {\r\n    console.log(error.response.data.status_message);\r\n  }\r\n}\r\n\r\nexport async function getMovieReviews(id) {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\r\n    );\r\n    const reviews = await response.data;\r\n\r\n    return reviews;\r\n  } catch (error) {\r\n    console.log(error.response.data.status_message);\r\n  }\r\n}\r\n"],"names":["review","author","content","className","scss","reviewsArr","reviewsArrLength","length","map","id","movieId","useParams","useState","setReviewsArr","useEffect","getMovieReviews","then","response","results","catch","error","console","log","API_KEY","BASE_URL","getTrandingMovies","axios","data","trandMovies","status_message","getMoviesByQuery","query","queryMovies","getMovieById","movie","getMovieActors","actors","reviews"],"sourceRoot":""}